services:
  customer-db_service:
    container_name: customer-db
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: customeruser
      POSTGRES_PASSWORD: customerpw
      POSTGRES_DB: customerdb
      PGDATA: /data/postgres
    volumes:
      - postgres-data-customer:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  fraud-db_service:
    container_name: fraud-db
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: frauduser
      POSTGRES_PASSWORD: fraudpw
      POSTGRES_DB: frauddb
      PGDATA: /data/postgres
    volumes:
      - postgres-data-fraud:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - postgres
    restart: unless-stopped

  notification-db_service:
    container_name: notification-db
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: notificationuser
      POSTGRES_PASSWORD: notificationpw
      POSTGRES_DB: notificationdb
      PGDATA: /data/postgres
    volumes:
      - postgres-data-notification:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin_service:
    container_name: pgadmin
    image: dpage/pgadmin4:6.18
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin-db_service:
    image: openzipkin/zipkin-mysql:2.22
    container_name: zipkin-db
    ports:
      - "3306:3306"
    networks:
      - spring

  zipkin_service:
    image: openzipkin/zipkin:2.24
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=zipkin-db
      # - SELF_TRACING_ENABLED=true
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
    ports:
      - "9411:9411"
    depends_on:
      - zipkin-db_service
    networks:
      - spring

  dependencies_service:
    image: openzipkin/zipkin-dependencies:2.6
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=zipkin-db
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      - MYSQL_DB=zipkin
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Adjust memory used by the dependencies job
      - JAVA_OPTS=-verbose:gc -Xms512m -Xmx512m
    depends_on:
      - zipkin-db_service
    networks:
      - spring
    restart: unless-stopped

  rabbitmq_service:
    image: rabbitmq:3.9.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: jamal
      RABBITMQ_DEFAULT_PASS: jamal
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      # port to be used by producers and consumers to connect to rabbitmq
      - "5672:5672"
      # management port of rabbitmq
      - "15672:15672"
    networks:
      - spring

  eureka-server_service:
    image: jem2019/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      # application-docker.yml will be used for the “docker” profile
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin_service

  apigw_service:
    image: jem2019/apigw:latest
    container_name: apigw
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - zipkin_service
      - eureka-server_service

  customer_service:
    image: jem2019/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin_service
      - eureka-server_service
      - customer-db_service
      - rabbitmq_service

  fraud_service:
    image: jem2019/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin_service
      - eureka-server_service
      - fraud-db_service
      - rabbitmq_service

  notification_service:
    image: jem2019/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin_service
      - eureka-server_service
      - notification-db_service
      - rabbitmq_service

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres-data-customer:
  postgres-data-fraud:
  postgres-data-notification:
  pgadmin-data:
  rabbitmq-data: